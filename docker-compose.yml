services:
  reverse-proxy:
    image: traefik:v3.2.2
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      - --api.insecure=true
      - --providers.docker
      - --log.level=DEBUG
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik_default`)
      - --providers.docker.exposedByDefault=false
      - --providers.file.filename=traefik_conf/dynamic_conf.toml
      # Entrypoints (ports) for the routers
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=tonlab.net
      - --entrypoints.websecure.http.tls.domains[0].sans=*.tonlab.net
      - --entrypoints.websecure.http3=true
#      - --entrypoints.api.address=:8080
      - --api
    ports:
      - "80:80/tcp"
      - "80:80/udp"
      - "8080:8080"
#      - 8443:8443
    volumes:
      - ./config/dynamic_conf.toml:/traefik_conf/dynamic_conf.toml  # dynamic traefik configuration
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs/:/var/log/traefik/
    labels:
      # traefik.enable is required because we don't expose all containers automatically
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.constraint-label=traefik_default

      # Middleware to redirect to bare https
      - traefik.http.middlewares.redirect-to-non-www-https.redirectregex.regex=^https?://(?:www\.)?(.+)
      - traefik.http.middlewares.redirect-to-non-www-https.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.redirect-to-non-www-https.redirectregex.permanent=true

      # replace with _your IP_
      - traefik.http.middlewares.api-ipwhitelist.ipwhitelist.sourcerange=0.0.0.0/0
      - traefik.http.services.api.loadbalancer.server.port=8080

      # Extra middleware (ratelimit, ip whitelisting)
      - traefik.http.middlewares.traefik-ratelimit.ratelimit.average=100
      - traefik.http.middlewares.traefik-ratelimit.ratelimit.burst=50

  whoami:
    image: traefik/whoami:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.constraint-label=traefik-proxy"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.rule=Host(`whoami.tonlab.net`)" # change hostname!
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
      - "traefik.http.services.whoami.loadbalancer.server.port=80" # set port the container listenes to
    networks:
      - traefik_default

networks:
  traefik_default:
    external: true